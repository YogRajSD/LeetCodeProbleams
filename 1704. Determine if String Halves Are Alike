You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.
Example 2:

Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.
Example 3:

Input: s = "MerryChristmas"
Output: false
Example 4:

Input: s = "AbCdEfGh"
Output: true
 

Constraints:

2 <= s.length <= 1000
s.length is even.
s consists of uppercase and lowercase letters.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
    public boolean halvesAreAlike(String s) {
        int l=s.length()/2;
        int countFirst=0,countSecond=0;
        for(int i=0;i<l;i++){
            char ch=s.charAt(i);
            if(IsVowel(ch)){
                countFirst++;
            }
        }
        for(int j=l;j<s.length();j++)
        {
            char ch=s.charAt(j);
            if(IsVowel(ch)){
                countSecond++;
            }
        }
        return countFirst==countSecond;
    }
    static boolean IsVowel(char ch){
        if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u' || ch=='A' || ch=='E' || ch=='I' || ch=='O' || ch=='U'){
            return true;
        }
        else{
            return false;
        }
    }
}
// Yogesh Deolalkar
